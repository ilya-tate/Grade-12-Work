File Structure
    - 7 folders, 1 file
    - Sass developed the 7 folder structure to organize all of the sass partial files that you will be creating.
    - The one file outside of the folders is the main styles that you import all of the other work into.

    util Folder:
        - This folder contains all of the variables including colors and sizes.
        - _variables.scss
        - _functions.scss
        - _mixins.scss

    base Folder
        - This folder contains all of the defaults that you will use.
        - _reset.scss
        - _typeography.scss (fonts)

    components Folder
        - This is a robust folder that holds a bunch of smaller pieces of the site.
        - _buttons.scss
        - _carousel.scss
        - _slider.scss
        - _modal.scss
        - _slideshow.scss

    layout Folder
        - These are pieces of the site that will always be visible or define the layout of the site.
        - _navbar.scss
        - _grid.scss
        - _header.scss
        - _footer.scss
        - _sidebar.scss
        - _forms.scss

    pages Folder
        - These are specific pages that your site will have, these don't have a ton of styles in them but in case you need something special for that page you can do it here.
        - _home.scss
        - _about.scss
        - _contact.scss
        - _error.scss

    themes Folder
        - These are whree you will add different themes like light and dark mode, it is also recommeneded to add an admin theme so people know when they are in charge.
        - _theme.scss
        - _defaultTheme.scss
        - _light.scss
        - _dark.scss
        - _darkTheme.scss
        - _admin.scss

    vendors Folder
        - This is an optional folder but you will use this for any libraries that you need / install.
        - _bootstrap.scss
        - _jquery-ui.scss
        - _chartjs.scss

    main.scss
        - THIS WILL HAVE NO STYLES IN IT.
        - main.scss is there collect all of the other styles into one place. When you compile this file into one css, everything should work nicer.
        - Make sure you import in order of least specific to most specific.
        - Import Order:
            @use 'abstracts/';
            @use 'vendors/';
            @use 'base/';
            @use 'layout/';
            @use 'pages/';
            @use 'components/';
            @use 'themes/';

Dart Sass
    - The newest version of sass, called Dart, added two new features.
    - They replaces @import with @use if you want to import a partial into your file for use.
    - They also added @forward which is a really convientway to export your files.

    @forward
        - The @forward rule is used in an index file that allows you to export a large amount of partials with one import.
        - This is really useful for the 7 folders, 1 file system because we will have 7 folders full of partials and importing each one is a nightmare to organize on your final file.

    @use
        - Remember that @import is deprecated and we use @use now.
        - You can use @use on any file that you want, but we are going to use it to import partials to index.scss files and the main.scss file.

    Variables
        - Variables are just like js, a name representing a value that you can use in other files.
        - These are created using "$" but make sure to keep the name descriptive.

    @use Variables
        - All variables should be kept on a variables file, you can make several if needed but one if preferred.
        - This file is imported using @use at the top of any file that you use the varibles.
        Ex.
            @use '../themes/index';
        - Once imported you need to make sure that you call them like we do for objects.
        Ex.
            @use '../themes/defaultTheme';
            .question {
                padding: 1rem 1.5rem;
                border: 2px solid defaultTheme.$clr-grey;
            }
        - Declaring the name of the file and then the variable.
        - Just like importing files in js we can rename the @use to make it easier to use.
        Ex.
            @use '../themes/defaultTheme' as c;
            .question {
                padding: 1rem 1.5rem;
                border: 2px solid c.$clr-grey-special;
            }
        - You can use * to give your variables the ability to be called with no name.
        - ONLY USE THIS IF YOU HAVE ONE VARIABLE FILE.
        Ex.
            @use '../themes/defaultTheme' as *;
            .question {
                padding: 1rem 1.5rem;
                border: 2px solid $clr-grey-special;
            }

        @content
            - One more amazing tool added to dart sass was @content.
            - This takes anything in the brackets and distributes it.

        
